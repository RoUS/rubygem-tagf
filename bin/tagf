#! /usr/bin/env ruby
#--
# Copyright Â© 2022 Ken Coar
#
# Licensed under the Apache License, Version 2.0 (the "License"); you
# may not use this file except in compliance with the License.  You
# may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.  See the License for the specific language governing
# permissions and limitations under the License.
#++
# frozen_string_literal: true

require('bundler')
Bundler.setup
require('tagf/cli')
require('byebug')

include(TAGF)

# Import the TAGF::CLI::Commands command hash into our namespace for
# easy reference.
Commands		= TAGF::CLI::Commands

# @!macro doc.TAGF.module
module TAGF

  # This is the shell command-line tool, so define a `help` command.
  CLI.command('help') do |cdef|
    cdef.usage('help [command]')
    cdef.aliases(:h)
    cdef.summary(format('Display help for the %s shell interface',
                        Pathname($0).basename))
    cdef.description(<<-EOT)
Display help for the #{Pathname($0).basename} shell command-line tool.
    EOT
    cdef.run do |opts,args,cmd|
      if (cmd == CLI::Commands['help'])
        puts(cmd.help)
      end
    end
  end                           # CLI.command('help')

  nil
end				# module TAGF

#
# Load the various tools for which this script front-ends.
#
require('tagf/tools/render')
require('tagf/tools/validate')

#
# Now go forth and function!
#
args			= ARGV.dup
verb			= args.shift
unless (cmd = TAGF::CLI.find_command(verb))
  warn(format('%s: unknown command: %s',
              Pathname($0).basename,
              verb.inspect))
  exit(1)
end

result			= cmd.run(args)
exit(result.to_i)

# Local Variables:
# mode: ruby
# indent-tabs-mode: nil
# eval: (if (intern-soft "fci-mode") (fci-mode 1))
# eval: (auto-fill-mode 1)
# End:
